var webpack = require("webpack");
/**
 * Config for test environment is pretty different from dev and prod, so we don"t use common config as base.
 *
 * Karma watches the test entry points, so we don"t need to define entry point here.
 */
module.exports = {
  /**
   * Inline source maps, generated by TypeScript compiler, will be used for code coverage.
   */
  devtool: "inline-source-map",

  resolve: {
    extensions: [".ts", ".tsx", ".js", ".scss", ".html"],
    modules: ["node_modules", "src", "test", "typings"]
  },

  module: {
    rules: [
      /**
       * Enable inline source maps for code coverage report.
       *
       * See project repository for details / configuration reference:
       * https://github.com/s-panferov/awesome-typescript-loader
       */
      {
        test: /\.ts(x?)$/,
        loader: "babel-loader!ts-loader",
      },
      /**
       * These loaders are used in other environments as well.
       */
      {
        test: /\.json$/,
        loader: "json-loader",
      },
      {
        test: /\.html$/,
        loader: "html-loader",
      },
      {
        test: /\.scss$/,
        loader: "style-loader!css-loader!sass-loader",
      },
      /**
       * Instruments TS source files for subsequent code coverage.
       * See https://github.com/deepsweet/istanbul-instrumenter-loader
       */
      {
        enforce: "post",
        test: /\.ts(x?)$/,
        loader: "istanbul-instrumenter-loader",
        exclude: [
          "node_modules",
          /\.(e2e|spec)\.ts$/
        ]
      },
    ],
  },

  plugins: [
    new webpack.NormalModuleReplacementPlugin(/^\.\/package$/, function(result) {
      if(/cheerio/.test(result.context)) {
        result.request = "./package.json";
      }
    })
  ],
  externals: {
    "react/addons": true,
    "react/lib/ExecutionEnvironment": true,
    "react/lib/ReactContext": "window",
    "text-encoding": "window"
  },
};
